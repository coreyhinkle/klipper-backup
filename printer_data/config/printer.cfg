# This file contains common pin mappings for the BIGTREETECH Manta M8P V2.0
# To use this config, the firmware should be compiled for the
# STM32H723 with a "8KiB bootloader" and USB communication.

# This config is currently only correct for V2.0 boards
# 
# See docs/Config_Reference.md for a description of parameters.
[include mainsail.cfg]
[include KAMP_Settings.cfg]
#[include ebb-sb-rp2040.cfg]
[include nevermore.cfg]
[include sb-2.cfg]
#[include SM2.cfg]

# Toolchanger
#[include tapchanger/homing.cfg]
#[include tapchanger/toolchanger-2.4.cfg]
#[include tapchanger/macros.cfg]
#[include macros.cfg]
#[include tapchanger/tool_detection.cfg]
[mcu]
##	[X in MOTOR1] - B Motor
##	[Y in MOTOR2] - A Motor
##	[E in MOTOR8] - Extruder
##	Obtain definition by "ls /dev/serial/by-id/*" then unplug to verify
##--------------------------------------------------------------------
canbus_uuid: 3d2cb7337ea8
#restart_method: command
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000    			#Max 4000
max_z_velocity: 15 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

[temperature_sensor MCU]
sensor_type: temperature_mcu

[temperature_sensor SoC]
sensor_type: temperature_host

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

## X Stepper on Motor1(B Motor)
[stepper_x]
step_pin: PE6
dir_pin: PE5
enable_pin: !PC14
microsteps: 16
rotation_distance: 40
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: 0
##--------------------------------------------------------------------

position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 50   #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC13
diag_pin: PF4
driver_SGTHRS: 140
interpolate: True
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

## Y Stepper on Motor2 (A Motor)
[stepper_y]
step_pin: PE2
dir_pin: PE1
enable_pin: !PE4
microsteps: 16
rotation_distance: 40
endstop_pin: ^PF3
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
position_min: 0
##--------------------------------------------------------------------

position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 100  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PE3
interpolate: True
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left on MOTOR3_A
[stepper_z]
step_pin: PB8
dir_pin: PB7
enable_pin: !PE0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
##--------------------------------------------------------------------

position_max: 340

##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PB9
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z1 Stepper - Rear Left on Motor5
[stepper_z1]
step_pin: PB4
dir_pin: !PB3
enable_pin: !PB6
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16


##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PB5
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z2 Stepper - Rear Right on Motor6
[stepper_z2]
step_pin: PG13
dir_pin: PG12
enable_pin: !PG15
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16


##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PG14
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z3 Stepper - Front Right on Motor7
[stepper_z3]
step_pin: PG9
dir_pin: !PD7
enable_pin: !PG11
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16


##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PG10
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - HE1
heater_pin: PA1
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: Generic 3950
sensor_pin: PB1
##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
max_power: 0.6
min_temp: 0
max_temp: 120

#####################################################################
# 	Fan Control
#####################################################################

#[fan]
##	Print Cooling Fan - CNC_FAN0
#pin: PF7
#kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
#off_below: 0.10

#[heater_fan hotend_fan]
##	Hotend Fan - CNC_FAN1
#pin: PF9
#max_power: 1.0
#kick_start_time: 0.5
#heater: extruder
#heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[heater_fan controller_fan skirt1]
##	Skirt Fan
pin: PF6
kick_start_time: 0.5
heater: heater_bed
heater_temp: 45.0

[heater_fan controller_fan skirt2]
##	Skirt Fan
pin: PF9
kick_start_time: 0.5
heater: heater_bed
heater_temp: 45.0

[heater_fan exhaust_fan]
##	Exhaust fan - CNC_FAN3
pin: PF8
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
heater: heater_bed
heater_temp: 60
fan_speed: 1.0

#[heater_fan fan4]
#pin: PA4

#[heater_fan fan5]
#pin: PA6
#tachometer_pin: PC2

#[heater_fan fan6]
#pin: PA2
#tachometer_pin: PC1

#####################################################################
# 	LED Control
#####################################################################

#[output_pin caselight]
# Chamber Lighting - HE2 Connector (Optional)
#pin: PA3
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
home_xy_position:175,175
speed:400
z_hop:10

[endstop_phase]

[quad_gantry_level]

##	Gantry Corners for 350mm Build
speed: 400
gantry_corners:
	-60,-10
	410,420
#	Probe points
points:
	50,25
	50,275
	300,275
	300,25

#--------------------------------------------------------------------
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE7, EXP1_2=PG1,
    EXP1_3=PG0, EXP1_4=PF15,
    EXP1_5=PF14, EXP1_6=PF13,    # Slot in the socket on this side
    EXP1_7=PF12, EXP1_8=PF11,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PE13, EXP2_2=PE12,
    EXP2_3=PE15, EXP2_4=PE11,
    EXP2_5=PE10, EXP2_6=PE14,      # Slot in the socket on this side
    EXP2_7=PE8, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<NC>

# See the sample-lcd.cfg file for definitions of common LCD displays.

#####################################################################
# 	Displays
#####################################################################

## 	Uncomment the display that you have
#--------------------------------------------------------------------

#[display]
##	RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------

[display]
#	mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[neopixel btt_mini12864]
#	To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
       SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------
[bed_mesh]
speed: 1000
horizontal_move_z: 5
mesh_min: 5, 5
mesh_max: 340, 340
probe_count: 5, 5

#####################################################################
# 	Settings
#####################################################################

[exclude_object]
[firmware_retraction]
retract_length: 0.5
retract_speed: 35
[gcode_arcs]
[respond]
[input_shaper]
# Originally calculated by me
#shaper_freq_x: 42.85  # frequency for the X mark of the test model
#shaper_freq_y: 46.66  # frequency for the Y mark of the test model



#####################################################################
# 	Macros
#####################################################################

[gcode_macro G32]
gcode:
    M117 Homing......
    STATUS_HOMING
    G28

######################################################################
## Filament Change ##
######################################################################
# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and unload filament.
[gcode_macro M600]
########### Gcode ############
gcode:
  {% set X = params.X|default(printer.configfile.config["stepper_x"]["position_endstop"]|string)|int %}
  {% set Y = params.Y|default(printer.configfile.config["stepper_y"]["position_endstop"]|string)|int %}
  {% set Z = params.Z|default(10)|int %}
  {% set E = params.E|default(-20)|int %}
  {% set tool = params.tool|default(0)|int %}
  PAUSE
  G91
  G1 E-5 F4000
  G1 Z{Z}
  G90
  G1 X{X} Y{Y} F3000 ;park position
  UNLOAD_FILAMENT
   
[gcode_macro OLD_PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    M104 S100
    M140 S{params.BED}
    G32                            ; home all axes
    M117 Heating bed......
    M190 S{params.BED}
    M109 S100
    M117 Leveling gantry........
    STATUS_LEVELING                   #LED Status Color
    QUAD_GANTRY_LEVEL
    G28 Z
    STATUS_MESHING                    #LED Status Color
    M117 Calibrating mesh........
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE ADAPTIVE=1
    SMART_PARK
    STATUS_HEATING                   #LED Status Color
    M117 Heating toolhead........
    M104 S{params.EXTRUDER}
    M109 S{params.EXTRUDER}
    M117 Cooling nozzle......
    CLEAN_NOZZLE
    VORON_PURGE
    M117 Printing!
   

[gcode_macro OLD_PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament

    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    
    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro BELT_TUNING_POS]
gcode:
  G0 X175 Y110 Z220 F3000

[gcode_macro CLEAN_NOZZLE]
variable_start_x: 265
variable_start_y: 350
variable_start_z: 5.5
variable_wipe_dist: 50
variable_wipe_qty: 10
variable_wipe_spd: 200
variable_raise_distance: 30

gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}
 
 G90                                            ; absolute positioning
 ## Move nozzle to start position
 G1 X{start_x} Y{start_y} F6000
 G1 Z{start_z} F1500

 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd * 60}
   G1 X{start_x} F{wipe_spd * 60}
 {% endfor %}

 ## Raise nozzle
 G1 Z{raise_distance}

[gcode_macro test_speed_fast]
gcode:
        G28 X0 Y0
        GET_POSITION
        G1 X0 Y0     F27000
        G1 X350 Y350 F27000
        G1 X0 Y0     F27000
        G1 X350 Y350 F27000

        G1 X0 Y350 F36000

        G1 X350 Y0 F27000
        G1 X0 Y350 F27000
        G1 X350 Y0 F27000
        G1 X0 Y350 F27000

        G1 X0 Y0 F36000
        G1 X350 Y0 F36000
        G1 X350 Y350 F36000
        G1 X0 Y350 F36000
        G1 X0 Y0 F36000
        G28 X0 Y0
        GET_POSITION

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 36.691
#*# pid_ki = 1.170
#*# pid_kd = 287.564
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 47.6
#*# shaper_type_y = mzv
#*# shaper_freq_y = 34.0